{"version":3,"sources":["components/Monster.js","components/Player.js","components/Arena.js","actions/index.js","d20-blank.svg","components/Landing.js","App.js","utilities/monsters.js","reducers/playerReducer.js","reducers/index.js","reducers/monstersReducer.js","reportWebVitals.js","index.js"],"names":["Monster","monster","className","name","description","Player","player","HP","Arena","console","log","this","props","monsters","selectMonster","Math","floor","random","length","currentMonster","React","Component","connect","state","type","payload","Landing","src","logo","alt","to","App","path","exact","component","hitMod","hotMod","player1","combineReducers","monsterList","selectedMonster","action","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","reducers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAoBeA,EAlBC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjB,OAAKA,EAKH,gCACE,mBAAGC,UAAU,mCACb,qBAAKA,UAAU,UAAf,SACE,sBAAKA,UAAU,cAAf,UACE,6BAAKD,EAAQE,OACb,4BAAIF,EAAQG,sBATX,MCWIC,EAbA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OAAKA,EAKH,gCACE,4BAAIA,EAAOH,OACX,4BAAIG,EAAOC,QANN,MCGLC,E,uKACJ,WACEC,QAAQC,IAAIC,KAAKC,OADC,IAEVC,EAAaF,KAAKC,MAAlBC,SAERF,KAAKC,MAAME,cAAcD,EAASE,KAAKC,MAAMD,KAAKE,SAASJ,EAASK,Y,oBAKtE,WACE,OACE,gCACE,uCACA,cAAC,EAAD,CAASjB,QAASU,KAAKC,MAAMO,iBAC7B,cAAC,EAAD,CAAQb,OAAQK,KAAKC,MAAMN,gB,GAffc,IAAMC,WA6BXC,eARS,SAACC,GACvB,MAAO,CACLV,SAAUU,EAAMV,SAChBM,eAAgBI,EAAMJ,eACtBb,OAAQiB,EAAMjB,UAIsB,CAACQ,cCnCZ,SAACb,GAC5B,MAAO,CACLuB,KAAM,iBACNC,QAASxB,KDgCEqB,CAA0Cd,GEpC1C,MAA0B,sCCqB1BkB,EAjBC,WACd,OACE,yBAAQxB,UAAU,aAAlB,UACE,qBAAKyB,IAAKC,EAAM1B,UAAU,WAAW2B,IAAI,SACzC,wDAGA,cAAC,IAAD,CACE3B,UAAU,WACV4B,GAAG,SAFL,iCCSSC,EAbH,WACV,OACE,qBAAK7B,UAAU,MAAf,SACE,cAAC,IAAD,UACE,gCACE,cAAC,IAAD,CAAO8B,KAAK,IAAIC,OAAK,EAACC,UAAWR,IACjC,cAAC,IAAD,CAAOM,KAAK,SAASE,UAAW1B,YCqB3BK,EAlCE,CACf,CACEV,KAAM,eACNC,YAAa,iCACb+B,OAAQ,EACR5B,GAAI,KAEN,CACEJ,KAAM,aACNC,YAAa,qCACb+B,OAAQ,EACR5B,GAAI,IAEN,CACEJ,KAAM,YACNC,YAAa,gCACb+B,OAAQ,EACR5B,GAAI,IAEN,CACEJ,KAAM,gBACNC,YAAa,yCACb+B,OAAQ,EACR5B,GAAI,IAEN,CACEJ,KAAM,eACNC,YAAa,kBACbgC,OAAQ,EACR7B,GAAI,MC7BF8B,EAAU,CACdlC,KAAM,UACNI,GAAI,KCGS+B,cAAgB,CAC7BzB,SCJ6B,WAAmC,IAAlCA,EAAiC,uDAAxB0B,EACvC,OAAO1B,GDIPM,eCDkC,WAAmC,IAAlCqB,EAAiC,uDAAjB,KAAMC,EAAW,uCACpE,OAAQA,EAAOjB,MACb,IAAK,iBACH,OAAOiB,EAAOhB,QAChB,QACE,OAAOe,IDHXlC,ODH2B,WAA6B,IAA5BA,EAA2B,uDAApB+B,EAASI,EAAW,uCACvD,OAAQA,EAAOjB,MACb,IAAK,gBACH,OAAOiB,EAAOhB,QAChB,QACE,OAAOnB,MGEEoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCERQ,EAAQC,YAAYC,GAE1BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,SAM1BhB,M","file":"static/js/main.236b68bd.chunk.js","sourcesContent":["import React from 'react';\n\nconst Monster = ({ monster }) => {\n  if (!monster) {\n    return null;\n  }\n\n  return (\n    <div>\n      <i className=\"large middle aligned icon user\" />\n      <div className=\"content\">\n        <div className=\"description\">\n          <h2>{monster.name}</h2>\n          <p>{monster.description}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Monster;","import React from 'react';\n\nconst Player = ({ player }) => {\n  if (!player) {\n    return null;\n  }\n\n  return (\n    <div>\n      <p>{player.name}</p>\n      <p>{player.HP}</p>\n    </div>\n  );\n}\n\nexport default Player;","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { selectMonster } from '../actions';\nimport Monster from './Monster';\nimport Player from './Player';\n\nclass Arena extends React.Component {\n  componentDidMount() {\n    console.log(this.props);\n    const { monsters } = this.props; \n    \n    this.props.selectMonster(monsters[Math.floor(Math.random()*monsters.length)]);\n\n    }\n    \n\n  render() {\n    return (\n      <div>\n        <h2>Arena</h2>\n        <Monster monster={this.props.currentMonster} />\n        <Player player={this.props.player} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    monsters: state.monsters,\n    currentMonster: state.currentMonster,\n    player: state.player\n  };\n}\n\nexport default connect(mapStateToProps, {selectMonster})(Arena);","// Monster actions\nexport const selectMonster = (monster) => {\n  return {\n    type: 'SELECT_MONSTER',\n    payload: monster\n  }\n}\n\nexport const updateMonsterHP = (monster, change) => {\n  return {\n    type: 'UPDATE_MONSTER_HP',\n    payload: {monster, change}\n  }\n}\n\n// Player actions\n\nexport const updatePlayerHP = (player, change) => {\n  return {\n    type: 'UPDATE_MONSTER_HP',\n    payload: {player, change}\n  }\n}\n\nexport const updateScore = (player, score) => {\n  return {\n    type: 'UPDATE_SCORE',\n    payload: {player, score}\n  }\n}\n\nexport const createPlayer = (player) => {\n  return {\n    type: 'CREATE_PLAYER',\n    payload: player\n  }\n}","export default __webpack_public_path__ + \"static/media/d20-blank.7efaa34b.svg\";","import logo from '../d20-blank.svg';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Landing = () => {\n  return (\n    <header className=\"App-header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <p>\n        Role Dice. Battle Evil.\n      </p>\n      <Link\n        className=\"App-link\"\n        to=\"/arena\"\n      >\n        Fight Monsters!\n      </Link>\n    </header>\n  );\n};\n\nexport default Landing;","import './App.css';\n\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport Arena from './components/Arena';\nimport Landing from './components/Landing';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <div>\n          <Route path=\"/\" exact component={Landing} />\n          <Route path=\"/arena\" component={Arena}  />\n        </div>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const monsters = [\n  {\n    name: 'Death Muppet',\n    description: 'A very goofy, but deadly, foe.',\n    hitMod: 5,\n    HP: 100\n  },\n  {\n    name: 'Heck Golem',\n    description: 'A wad of animate clay that is mean',\n    hitMod: 3,\n    HP: 42\n  },\n  {\n    name: 'Bad Apple',\n    description: 'It has arms but it should not',\n    hitMod: 2,\n    HP: 15\n  },\n  {\n    name: 'Straight Line',\n    description: 'Bursting with loathing for bent things',\n    hitMod: 5,\n    HP: 12\n  },\n  {\n    name: 'Stone Jester',\n    description: 'Was only joking',\n    hotMod: 4,\n    HP: 300\n  }\n\n];\n\nexport default monsters;","const player1 = {\n  name: 'Player1',\n  HP: 100\n}\n\nexport const playerReducer = (player=player1, action) => {\n  switch (action.type) {\n    case 'CREATE_PLAYER':\n      return action.payload;\n    default:\n      return player;\n  }\n}","import { combineReducers } from 'redux';\n\nimport { monstersReducer, selectMonsterReducer } from './monstersReducer';\nimport { playerReducer } from './playerReducer';\n\nexport default combineReducers({\n  monsters: monstersReducer,\n  currentMonster: selectMonsterReducer,\n  player: playerReducer\n});","import monsterList from '../utilities/monsters';\n\nexport const monstersReducer = (monsters=monsterList, action) => {\n  return monsters;\n};\n\nexport const selectMonsterReducer = (selectedMonster=null, action) => {\n  switch (action.type) {\n    case 'SELECT_MONSTER': \n      return action.payload;\n    default:\n      return selectedMonster;\n  }\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport App from './App';\nimport reducers from './reducers';\nimport reportWebVitals from './reportWebVitals';\n\nconst store = createStore(reducers);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}